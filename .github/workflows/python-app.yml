name: Python application

on:
  push:
    branches:
      - main
      - exe  # Добавлена ветка "exe"
  pull_request:
    branches:
      - main
      - exe  # Добавлена ветка "exe"

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install pyinstaller
          python -m pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run PyInstaller
        run: |
          python -m PyInstaller -w --onefile src/YPPRPO.py --name "almavik"
      - uses: actions/upload-artifact@v2
        with:
          name: almavik
          path: "dist/almavik.exe"
      - name: Generate Unique Tag Name
        id: generate_tag_name
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const tagPrefix = 'release-';
            const tagNumbers = releases.map((release) => {
              const tagName = release.tag_name;
              if (tagName.startsWith(tagPrefix)) {
                return parseInt(tagName.replace(tagPrefix, ''), 10);
              }
              return 0;
            });
            const latestTagNumber = Math.max(...tagNumbers);
            const newTagNumber = latestTagNumber === 0 ? 1 : latestTagNumber + 1;
            const newTagName = `${tagPrefix}${newTagNumber}`;
            console.log(`::set-output name=tag_name::${newTagName}`);
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_tag_name.outputs.tag_name }}
          release_name: "Release ${{ steps.generate_tag_name.outputs.tag_name }}"
          body: |
            Release windows version
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "dist/almavik.exe"
          asset_name: "almavik.exe"
          asset_content_type: application/zip
