name: Python application

on:
  push:
    branches:
      - main
      - exe
  pull_request:
    branches:
      - main
      - exe

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          python -m pip install pyinstaller
          python -m pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Set PYTHONPATH
        run: export PYTHONPATH="$PYTHONPATH:${{ github.workspace }}/src"
      - name: Build Docker image
        run: |
            docker build -t markuslons/almavik:${{ github.run_number }} .
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: markuslons
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker image to Docker Hub
        run: |
          docker push markuslons/almavik:latest
      - name: Build Windows executable
        runs-on: windows-2019
        strategy:
          fail-fast: false
          matrix:
            python-version: ["3.10"]
        steps:
          - uses: actions/checkout@v3
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v3
            with:
              python-version: ${{ matrix.python-version }}
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              python -m pip install flake8 pytest
              python -m pip install pyinstaller
              python -m pip install -r requirements.txt
          - name: Lint with flake8
            run: |
              flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
              flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          - name: Run PyInstaller
            run: |
              python -m PyInstaller -w --onefile src/YPPRPO.py --name "almavik"
          - name: Create release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.AAA }}
            with:
              tag_name: ${{ github.run_number }}
              release_name: Automatically created successful release
              body: |
                Release windows version
              draft: false
              prerelease: false
          - name: Upload Release Asset
            id: upload-release-asset
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.AAA }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: "dist/almavik.exe"
              asset_name: "almavik.exe"
              asset_content_type: application/octet-stream